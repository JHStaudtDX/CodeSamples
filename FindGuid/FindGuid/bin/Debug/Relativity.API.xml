<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Relativity.API</name>
    </assembly>
    <members>
        <member name="T:Relativity.API.Analysis.ToggleAnalysisAttribute">
            <summary>
            Flags an extensibility point to be not be reflected on if the toggle is not enabled.
            </summary>
        </member>
        <member name="P:Relativity.API.Analysis.ToggleAnalysisAttribute.ToggleName">
            <summary>
            Name of the Toggle to check.
            </summary>
        </member>
        <member name="M:Relativity.API.Analysis.ToggleAnalysisAttribute.#ctor(System.String)">
            <summary>
            Indicates that the class should be skilled for Analysis if the toggle is not active.
            </summary>
            <param name="toggleName">Specifies the toggle that will be checked.</param>
        </member>
        <member name="M:Relativity.API.APILog.#ctor(Relativity.Logging.ILog)">
            <summary>
            Constructor
            </summary>
            <param name="logger">Typically the Relativity.Logging.Log.Logger singleton that is setup on the start of the application.</param>
        </member>
        <member name="T:Relativity.API.DBContext">
            <summary>
            Provides many common helper methods to interact with a database within a Relativity instance. 
            Typically, you should be using the Services API to interact with Relativity, however the DBContext provides direct access to the databases when needed. 
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.#ctor(kCura.Data.RowDataGateway.BaseContext)">
            <summary>
            Initializes a new instance of the DBContext class.
            </summary>
            <param name="context">Predefined context object based on which DBContext instance is created.</param>
        </member>
        <member name="M:Relativity.API.DBContext.GetConnection">
            <summary>
            Gets a database connection.
            </summary>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="P:Relativity.API.DBContext.Database">
            <summary>
            Gets a database name.
            </summary>
        </member>
        <member name="P:Relativity.API.DBContext.ServerName">
            <summary>
            Gets a database server name.
            </summary>
        </member>
        <member name="P:Relativity.API.DBContext.IsMasterDatabase">
            <summary>
            Checks if database is Master context
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.CreateDbParameter">
            <summary>
            Returns a database Parameter
            </summary>
            <returns>returns a newly created DbParameter object</returns>
        </member>
        <member name="M:Relativity.API.DBContext.GetConnection(System.Boolean)">
            <summary>
            Gets a database connection, with option to open if closed.
            </summary>
            <param name="openConnectionIfClosed">Indicates whether to open the connection if closed</param>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.GetTransaction">
            <summary>
            Gets a database transaction.
            </summary>
            <returns>Returns a database transaction.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.BeginTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.CommitTransaction">
            <summary>
            Commits a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.RollbackTransaction">
            <summary>
            Rolls back a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.RollbackTransaction(System.Exception)">
            <summary>
            Rolls back a database transaction.  Pass in inner exception if rollback times out.
            </summary>
            <param name="originatingException">The exception details that caused this rollback to be called</param>
        </member>
        <member name="M:Relativity.API.DBContext.ReleaseConnection">
            <summary>
            Releases a database connection.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.Cancel">
            <summary>
            Tries to cancel a SQL command execution.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalarWithInnerTransaction(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            ExecuteSqlStatementAsScalarWithInnerTransaction method can be called if context.transaction is not set
            This method opens transaction internally. This functionality is implemented to enable query rerun in case on the problems
            with Sql optimizer hints
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSQLStatementGetSecondDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSQLStatementAsReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSQLStatementAsEnumerable``1(System.String,System.Func{System.Data.SqlClient.SqlDataReader,``0},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the result as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> using the converter delegate.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="converter">Delegate to retrieve item from <see cref="T:System.Data.SqlClient.SqlDataReader"/> </param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteProcedureAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and builds a DbDataReader.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteProcedureNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and returns the number of rows affected.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteParameterizedSQLStatementAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32,System.Boolean)">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a sqlDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
             <param name="sequentialAccess">Determins if command is used with System.Data.CommandBehavior.SequentialAccess</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Int32)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="T:Relativity.API.Exceptions.SecretStoreException">
            <summary>
            Exception thrown on any secret store failure. Inspect inner exception for root cause.
            </summary>
        </member>
        <member name="M:Relativity.API.Exceptions.SecretStoreException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Relativity.API.Exceptions.SecretStoreException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Relativity.API.Exceptions.SecretStoreException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Relativity.API.Exceptions.SecretStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Relativity.API.ExecutionIdentity">
            <summary>
            ExecutionIdentity specifies the conceptual role under which an IServicesMgr 
            should create a proxy. The ExecutionIdentity is intended to be used by  
            IServicesMgr-derived classes to select an appropriate AuthenticationType for 
            proxy creation.
            </summary>
        </member>
        <member name="F:Relativity.API.ExecutionIdentity.CurrentUser">
            <summary>
            The current user's identity is flowed through the calls.
            </summary>
        </member>
        <member name="F:Relativity.API.ExecutionIdentity.System">
            <summary>
            The system's context is used for escilated permissions.
            </summary>
        </member>
        <member name="F:Relativity.API.ExecutionIdentity.Manual">
            <summary>
            Progromatically give the identity for calls.
            </summary>
        </member>
        <member name="T:Relativity.API.IServiceHelper">
            <summary>
            Provides a mockable interface with helper methods to Services to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IServiceHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#WorkspaceUserArtifactID">
            <summary>
            Gets the case specific artifact ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#ArtifactID">
            <summary>
            Gets the global artifact ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#FirstName">
            <summary>
            Gets the first name of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#LastName">
            <summary>
            Gets the last name of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#FullName">
            <summary>
            Gets the full name of the user, as that is "LastName, FirstName".
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#EmailAddress">
            <summary>
            Gets the email Address of the User.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#AuditWorkspaceUserArtifactID">
            <summary>
            Gets the user workspace artifact id to use for auditing purposes.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#AuditArtifactID">
            <summary>
            Gets the user id to use for auditing purposes.
            </summary>
        </member>
        <member name="M:Relativity.API.HiddenUserInfo.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the UserInfo class.
            </summary>
            <param name="artifactID">Integer value indicating the artifact ID for a user.</param>
            <param name="firstName">String value indicating the first name of a user.</param>
            <param name="lastName">String value indicating the last name of a user.</param>
            <param name="emailAddress">String value indicating the email address of a user.</param>
            <remarks></remarks>
        </member>
        <member name="T:Relativity.API.IMOHelper">
            <summary>
            Provides a mockable interface with helper methods to Mass Operation Event Handlers to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IMOHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.IMOHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Mass Operation Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.API.IAPILog">
            <summary>
            Logging wrapper of Relativity.Logging
            </summary>
        </member>
        <member name="M:Relativity.API.IAPILog.LogVerbose(System.String,System.Object[])">
            <summary>
            Verbose level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogVerbose(System.Exception,System.String,System.Object[])">
            <summary>
            Verbose level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogDebug(System.String,System.Object[])">
            <summary>
            Debug level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogDebug(System.Exception,System.String,System.Object[])">
            <summary>
            Debug level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogInformation(System.String,System.Object[])">
            <summary>
            Information level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogInformation(System.Exception,System.String,System.Object[])">
            <summary>
            Information level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogWarning(System.String,System.Object[])">
            <summary>
            Warning level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogWarning(System.Exception,System.String,System.Object[])">
            <summary>
            Warning level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogError(System.String,System.Object[])">
            <summary>
            Error level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogError(System.Exception,System.String,System.Object[])">
            <summary>
            Error level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogFatal(System.String,System.Object[])">
            <summary>
            Fatal level logging.
            </summary>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.LogFatal(System.Exception,System.String,System.Object[])">
            <summary>
            Fatal level logging with an exception.
            </summary>
            <param name="exception">An exception to add to the information logged.  Shows stack trace and error message.</param>
            <param name="messageTemplate">Structured logging template.
            <example>messageTemplate: "I am logging the {UserName} and its permission {@Permission} object", propertyValues: "myUserName123", permission</example></param>
            <param name="propertyValues">params for each brace'd item in the messageTemplate.</param>
        </member>
        <member name="M:Relativity.API.IAPILog.ForContext``1">
            <summary>
            Adds the full name of Type T to the log information.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IAPILog.ForContext(System.Type)">
            <summary>
            Adds the full name of the source's Type to the log information.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IAPILog.ForContext(System.String,System.Object,System.Boolean)">
            <summary>
            Adds the value object with the propertyName to the log information. DestructureObjects false will T
            </summary>
            <param name="propertyName">The property name to display in the log.</param>
            <param name="value">The object to deserialize and add to the log.</param>
            <param name="destructureObjects">true attempts to destructure the object, false will not.</param>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IAPILog.LogContextPushProperty(System.String,System.Object)">
            <summary>
            Adds the obj data with the propertyName to the log information of all logs that happen within a using statement.
            <example>
            In this C# example any loggers within the MethodThatLogs() method will have the PushProperty "User".
            <code>
            using (var pushLogger = _logger.LogContextPushProperty("User", user))
            {
            	MethodThatLogs();
            }
            </code>
            </example>
            </summary>
            <param name="propertyName">The property name to display in the log.</param>
            <param name="obj">The object to deserialize and add to the log.</param>
            <returns></returns>
        </member>
        <member name="T:Relativity.API.ILogFactory">
            <summary>
            Factory for getting loggers.
            </summary>
        </member>
        <member name="M:Relativity.API.ILogFactory.GetLogger">
            <summary>
            Gets the active Relativitiy.Logging.Log.Logger and wraps it into an IAPILog for external use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Relativity.API.ISecretStore">
            <summary>
            CRUD helpers for reading and writing secrets to the Secret Store
            </summary>
        </member>
        <member name="M:Relativity.API.ISecretStore.Get(System.String)">
            <summary>
            Retrieve a secret at the given path
            </summary>
            <param name="path">Path where the secret is stored. Must not be null</param>
            <returns>A secret</returns>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Relativity.API.ISecretStore.GetAsync(System.String)">
            <summary>
            Retrieves secret asynchronously
            </summary>
            <param name="path">Path where the secret is stored. Must not be null</param>
            <returns>Task for a secret</returns>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Relativity.API.ISecretStore.List(System.String)">
            <summary>
            Gets the list of all secrets and sub paths at specified path
            </summary>
            <param name="path">Path of the directories to be listed</param>
            <returns>Array of directory names (directories that have child secrets in them are appended by a / character)</returns>
        </member>
        <member name="M:Relativity.API.ISecretStore.ListAsync(System.String)">
            <summary>
            Gets list of secrets and sub paths asynchronously
            </summary>
            <param name="path">Path of the directories to be listed</param>
            <returns>Task for directory names</returns>
        </member>
        <member name="M:Relativity.API.ISecretStore.Set(System.String,Relativity.API.Secret)">
            <summary>
            Write a secret at the given path
            </summary>
            <param name="path">Path to write the secret. Must not be null</param>
            <param name="secret">A secret. Must not be null and contain some value in data property</param>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Relativity.API.ISecretStore.SetAsync(System.String,Relativity.API.Secret)">
            <summary>
            Writes secret asynchronously
            </summary>
            <param name="path">Path to write the secret. Must not be null</param>
            <param name="secret">A secret. Must not be null and contain some value in data property</param>
            <returns>Task with no return type</returns>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Relativity.API.ISecretStore.Delete(System.String)">
            <summary>
            Deletes a secret at the given path
            </summary>
            <param name="path">Path where the secret should be deleted. Must not be null</param>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Relativity.API.ISecretStore.DeleteAsync(System.String)">
            <summary>
            Deletes secret asynchronously
            </summary>
            <param name="path">Path where the secret should be deleted. Must not be null</param>
            <returns>Task with no return type</returns>
            <exception cref="T:Relativity.API.Exceptions.SecretStoreException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="T:Relativity.API.ICSRFManager">
            <summary>
            Helper to enforce CSRF(Cross Site Request Forgery) support.
            </summary>
        </member>
        <member name="P:Relativity.API.ICSRFManager.CSRFToken">
            <summary>
            Gets you the CSRF token used for the users sessions.
            This lets put the CSRF on your Custom Page.
            </summary>
        </member>
        <member name="P:Relativity.API.ICSRFManager.CSRFHeaderName">
            <summary>
            This gets you the Header Name that the CSRF should be submitted as.
            </summary>
        </member>
        <member name="M:Relativity.API.ICSRFManager.CheckCSRF">
            <summary>
            This will check that the current request has the CSRF.
            </summary>
            <exception cref="T:Relativity.API.AccessDeniedException">Throws if failed.</exception>
        </member>
        <member name="M:Relativity.API.ICSRFManager.CheckAgainstCSRF(System.String)">
            <summary>
            This will check that the current request has the CSRF.
            </summary>
            <param name="csrf">CSRF submmited.</param>
            /// <exception cref="T:Relativity.API.AccessDeniedException">Throws if failed.</exception>
        </member>
        <member name="T:Relativity.API.IUrlHelper">
            <summary>
            Provides helper methods for manipulating custom page URLs.
            </summary>
        </member>
        <member name="M:Relativity.API.IUrlHelper.GetApplicationURL(System.Guid)">
            <summary>
            Gets the uniform resource identifier (URI) for the custom pages in an application on the web server. 
            </summary>
            <remarks>On the web server, the URI for custom pages is the application GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The URI for the custom page root is the application GUID.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the application GUID is empty.</exception>
        </member>
        <member name="M:Relativity.API.IUrlHelper.GetRelativePathToCustomPages(System.Guid)">
            <summary>
            Gets the string path of the custom pages for an application on the web server. 
            </summary>
            <remarks>On the web server, string path for custom pages for the application this GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The string path to the custom page root is the application GUID.</returns>
        </member>
        <member name="T:Relativity.API.ISEHHelper">
            <summary>
            Interface for SEHHelper class - helper class for Statistics Event Handlers.
            </summary>
        </member>
        <member name="M:Relativity.API.ISEHHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.ISEHHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Statistics Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.API.IUserInfo">
            <summary>
            Provides a mockable interface with methods to obtain information about the currently logged in user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.WorkspaceUserArtifactID">
            <summary>
            Gets the current user workspace artifact id
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.ArtifactID">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.FirstName">
            <summary>
            Gets the first name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.LastName">
            <summary>
            Gets the last name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.FullName">
            <summary>
            Gets the full name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.EmailAddress">
            <summary>
            Gets the email address of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.AuditWorkspaceUserArtifactID">
            <summary>
            Gets the user workspace artifact id to use for auditing purposes.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.AuditArtifactID">
            <summary>
            Gets the user id to use for auditing purposes.
            </summary>
        </member>
        <member name="T:Relativity.API.License`1">
            <summary>
            Class implementing License object of type T.
            </summary>
            <typeparam name="T">Type that inherits from LicenseInfoBase.</typeparam>
        </member>
        <member name="M:Relativity.API.License`1.#ctor">
            <summary>
            Instantiates a license object.
            </summary>
        </member>
        <member name="P:Relativity.API.License`1.LicenseInfo">
            <summary>
            Gets and/or sets license info property of type T.
            </summary>
        </member>
        <member name="P:Relativity.API.License`1.Signature">
            <summary>
            Gets and/or sets a string property containing signature of a license object.
            </summary>
        </member>
        <member name="T:Relativity.API.LicenseInfoBase">
            <summary>
            Base class defining license information object.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.InitializeLifetimeService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.Company">
            <summary>
            Stores a company name.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.InstanceName">
            <summary>
            Stores an instance name.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.ExpirationDate">
            <summary>
            Stores datetime value indicating expiration date of a license.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.PasswordHash">
            <summary>
            Stores a hash value of a password.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.#ctor">
            <summary>
            Initializes a new instance of the LicenseInfoBase class.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.SetIsValid(System.Boolean)">
            <summary>
            Sets  a read-only property IsValid of license object.
            </summary>
            <param name="isValid">Boolean value indicating if a license is valid.</param>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsValid">
            <summary>
            Returns a boolean value indicating if a license is valid.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsOk">
            <summary>
            Returns a boolean value indicating if a license is valid and not expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsGracePeriodExpired">
            <summary>
            Returns a boolean value indicating if a license grace period has expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.HoursUntilLockout">
            <summary>
            Returns number of hours left until lockout of license occurs (lockout only occurs after grace period expires).
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsExpired">
            <summary>
            Returns a boolean value indicating if a license has expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.DaysBeforeExpiration">
            <summary>
            Returns a number of days left before a license expires.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.DaysBeforeLockout">
            <summary>
            Returns a number of days before a license locks out.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.ApplicationGuid">
            <summary>
            Gets and/or sets an application guid.
            </summary>
        </member>
        <member name="T:Relativity.API.IAgentHelper">
            <summary>
            Provides a mockable interface with helper methods to Agents to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IAgentHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="T:Relativity.API.IAuthenticationMgr">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
        </member>
        <member name="M:Relativity.API.IAuthenticationMgr.GetAuthenticationToken">
            <summary>
            Returns a token which is later used to authenticate a currently logged in user in Relativity. 
            Note: In Preview Security Mode, this token will continue to be written for the actual user. 
            </summary>
            <returns>Returns a token as a string.</returns>
        </member>
        <member name="P:Relativity.API.IAuthenticationMgr.UserInfo">
            <summary>
            Returns a a UserInfo interface which contains information regarding the currently logged in user.
            Note: In Preview Security Mode, the user info will represent the previewed user with the logged in user id being available in the Audit___ID properties
            </summary>
            <returns>Returns a UserInfo.</returns>
        </member>
        <member name="T:Relativity.API.ICPHelper">
            <summary>
            Provides a mockable interface with helper methods allowing Custom Pages to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.ICPHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.ICPHelper.GetCSRFManager">
            <summary>
            Gets a ICSRFManager to enforce CSRF(Cross Site Request Forgery) support.
            </summary>
            <returns>ICSRFManager for the current user.</returns>
        </member>
        <member name="M:Relativity.API.ICPHelper.GetActiveCaseID">
            <summary>
            Get's the active Workspace ArtifactID.
            </summary>
            <returns>Workspace ArtifactID.</returns>
        </member>
        <member name="T:Relativity.API.IDBContext">
            <summary>
            Provides a mockable interface with many common helper methods to interact with a database in a Relativity instance. 
            Typically, you should be using the Services API to interact with Relativity, however the DBContext provides direct access to the databases when needed. 
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.GetConnection">
            <summary>
            Gets a database connection.
            </summary>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="P:Relativity.API.IDBContext.Database">
            <summary>
            Gets a database name.
            </summary>
        </member>
        <member name="P:Relativity.API.IDBContext.ServerName">
            <summary>
            Gets a database server name.
            </summary>
        </member>
        <member name="P:Relativity.API.IDBContext.IsMasterDatabase">
            <summary>
            Checks if database is Master context
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.CreateDbParameter">
            <summary>
            Returns a database Parameter
            </summary>
            <returns>Parameter to a DbCommand and optionally, its mapping to a DataSet column.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.GetConnection(System.Boolean)">
            <summary>
            Gets a database connection, with option to open if closed.
            </summary>
            <param name="openConnectionIfClosed">Boolean value indicating if the connection should be opened upon its creation.</param>
            <returns>Returns an open connection to a SQL Server database. This class cannot be inherited.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.GetTransaction">
            <summary>
            Gets a database transaction.
            </summary>
            <returns>Returns a database transaction.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.BeginTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.CommitTransaction">
            <summary>
            Commits a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.RollbackTransaction">
            <summary>
            Rolls back a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.RollbackTransaction(System.Exception)">
            <summary>
            Rolls back a database transaction.  Pass in inner exception if rollback times out.
            </summary>
            <param name="originatingException">Exception object containing previously thrown exception.</param>
        </member>
        <member name="M:Relativity.API.IDBContext.ReleaseConnection">
            <summary>
            Releases a database connection.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.Cancel">
            <summary>
            Tries to cancel a SQL command execution.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalarWithInnerTransaction(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            ExecuteSqlStatementAsScalarWithInnerTransaction method can be called if context.transaction is not set
            This method opens transaction internally. This functionality is implemented to enable query rerun in case on the problems
            with Sql optimizer hints
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSQLStatementGetSecondDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSQLStatementAsReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a SqlDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSQLStatementAsEnumerable``1(System.String,System.Func{System.Data.SqlClient.SqlDataReader,``0},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the result as an <see cref="T:System.Collections.Generic.IEnumerable`1"/> using the converter delegate.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="converter">Delegate to retrieve item from <see cref="T:System.Data.SqlClient.SqlDataReader"/> </param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteProcedureAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and builds a DbDataReader.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteProcedureNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and returns the number of rows affected.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteParameterizedSQLStatementAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32,System.Boolean)">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a sqlDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
             <param name="sequentialAccess">Determins if command is used with System.Data.CommandBehavior.SequentialAccess</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Int32)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="T:Relativity.API.IEHHelper">
            <summary>
            Provides a mockable interface with helper methods to Object Type Event Handlers to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IEHHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.IEHHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.API.IHelper">
            <summary>
            Provides a mockable interface with helper methods to programmatically interact with Relativity from: Event Handlers, Custom Pages and Agents. 
            You can use these methods to create proxys to interact with the Services API, obtain database contexts to query\run SQL against a database and obtain a URL helper to create links to pages within a Relativity Instance.
            To create reusable code within Relativity, it is suggested that you pass down the generic Helper interaces such as this one into your data access layer project.
            </summary>
        </member>
        <member name="M:Relativity.API.IHelper.GetDBContext(System.Int32)">
            <summary>
            Gets a database context for Workspace ArtifactID provided.
            </summary>
            <param name="caseID">Integer value indicating the ArtifactID for the workspace the database context should be returned.</param>
            <returns>Returns a database context.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetServicesManager">
            <summary>
            Gets a Service Manager object that helps connect to RSAPI.
            </summary>
            <returns>Returns a Service Manager.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetUrlHelper">
            <summary>
            Gets a URL helper object that helps build urls to custom pages.
            </summary>
            <returns>Returns a UrlHelper.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetLoggerFactory">
            <summary>
            Gets a factory to return a logger that can be used to log application messages to a central system.
            </summary>
            <returns>A logger factory interface.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.ResourceDBPrepend">
            <summary>
            Retrieves the prepend for resource database transactions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IHelper.ResourceDBPrepend(Relativity.API.IDBContext)">
            <summary>
            Retrieves the prepend for resource database transactions
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetSchemalessResourceDataBasePrepend(Relativity.API.IDBContext)">
            <summary>
            Retrieves the resource database name based on the machine configuration
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetGuid(System.Int32,System.Int32)">
            <summary>
            Retrieves the GUID of a Relativity artifact based on the specified workspace ID and artifact ID (value is cached)
            </summary>
            <param name="workspaceID"></param>
            <param name="artifactID"></param>
            <returns>Returns the GUID of a Relativity artifact based on the specified workspace ID and artifact ID (value is cached)</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetSecretStore">
            <summary>
            Gets a helper object to store secrets securely.
            </summary>
            <returns>Returns a SecretStore.</returns>
        </member>
        <member name="T:Relativity.API.ILicenseMgr">
            <summary>
            Interface for LicenseManagerProxy class.
            </summary>
        </member>
        <member name="M:Relativity.API.ILicenseMgr.GetLicense``1(System.Guid,System.String)">
            <summary>
            Internal use only.
            Returns a License object with the license base you supplied.
            </summary>
            <typeparam name="T">Class of LicenseInfoBase the license type derives from.</typeparam>
            <param name="applicationGuid">The Guid of the Application the license is tied to.</param>
            <param name="password">The password to access the license information.</param>
            <returns>A License Object containing the LicenseInfo object supplied.</returns>
        </member>
        <member name="T:Relativity.API.IServicesMgr">
            <summary>
            Provides a mockable interface with methods to interact with the Services API.
            </summary>
        </member>
        <member name="M:Relativity.API.IServicesMgr.GetServicesURL">
            <summary>
            Gets the URL to the nearest Services API endpoint.
            </summary>
            <returns>Returns String of URI</returns>
        </member>
        <member name="M:Relativity.API.IServicesMgr.CreateProxy``1(Relativity.API.ExecutionIdentity)">
            <summary>
            Creates a proxy of IDisposable type T, operating under the given ExecutionIdentity.
            </summary>
            <typeparam name="T">IDisposable proxy type to be created.</typeparam>
            <param name="ident">ExecutionIdentity under which the proxy should operate. 
            This can be set to the current user, the service account and can also be set manually if you have a specific username and password to authenticate with.</param>
            <returns>A proxy of type T.</returns>
        </member>
        <member name="M:Relativity.API.IServicesMgr.GetRESTServiceUrl">
            <summary>
            Gets the URL to the Relativity REST Service endpoint.
            </summary>
            <returns>Returns String of URI</returns>
        </member>
        <member name="T:Relativity.API.Secret">
            <summary>
            Secret used for interacting with Secret Store
            </summary>
        </member>
        <member name="P:Relativity.API.Secret.Data">
            <summary>
            Data contained in the secret
            </summary>
        </member>
        <member name="T:Relativity.API.Services">
            <summary>
            Static class used to access IServiceHelper.
            </summary>
        </member>
        <member name="P:Relativity.API.Services.Helper">
            <summary>
            Gets the Relativity.API.IServiceHelper object
            </summary>
        </member>
        <member name="T:Relativity.API.IMonitorSecurityEvents">
            <summary>
            This interface is used for writing security related events to the security monitor
            </summary>
        </member>
        <member name="M:Relativity.API.IMonitorSecurityEvents.WriteEvent(System.String,System.Object[])">
            <summary>
            Write a security event to the monitor
            </summary>
            <param name="message">Message to the monitor. Can use {@object} notatation for serialization</param>
            <param name="propertyValues">objects to be used in the message</param>
        </member>
        <member name="M:Relativity.API.IMonitorSecurityEvents.IsSensitiveEmail(System.String)">
            <summary>
            Checks if the email is apart of a non sensitive domain
            </summary>
            <param name="email">email to verify</param>
        </member>
        <member name="T:Relativity.API.IWebServerHelper">
            <summary>
            This interface provides an abstraction for rewriting Uris based on the infestructure.
            </summary>
        </member>
        <member name="P:Relativity.API.IWebServerHelper.ApplicationRoot">
            <summary>
            The root name applicaiton is hosted under.
            </summary>
        </member>
        <member name="M:Relativity.API.IWebServerHelper.GetInternalUri(System.Uri,System.String,System.String)">
            <summary>
            This will convert the Uri to find the route from server to server.  Not to be given to the end user.
            </summary>
            <param name="requestUri">Request Uri to convert.</param>
            <param name="protocol">HTTP or HTTPS</param>
            <param name="path">The relative path</param>
            <returns>Uri for the interal call.</returns>
        </member>
        <member name="M:Relativity.API.IWebServerHelper.GetInternalUri(System.Uri,System.String,System.String,System.String)">
            <summary>
            This will convert the Uri to find the route from server to server.  Not to be given to the end user.
            </summary>
            <param name="requestUri">Request Uri to convert.</param>
            <param name="protocol">HTTP or HTTPS</param>
            <param name="path">The relative path</param>
            <param name="queryString">Query string to be used for the request.</param>
            <returns>Uri for the interal call.</returns>
        </member>
        <member name="M:Relativity.API.IWebServerHelper.GetExternalUri(System.Uri,System.String,System.String)">
            <summary>
            This will convert the Uri to find the route from browser to server.  Not to be used by the server.
            </summary>
            <param name="requestUri">Request Uri to convert.</param>
            <param name="protocol">HTTP or HTTPS</param>
            <param name="path">The relative path</param>
            <returns>Uri for the external call.</returns>
        </member>
        <member name="M:Relativity.API.IWebServerHelper.GetExternalUri(System.Uri,System.String,System.String,System.String)">
            <summary>
            This will convert the Uri to find the route from browser to server.  Not to be used by the server.
            </summary>
            <param name="requestUri">Request Uri to convert.</param>
            <param name="protocol">HTTP or HTTPS</param>
            <param name="path">The relative path</param>
            <param name="queryString">Query string to be used for the request.</param>
            <returns>Uri for the external call.</returns>
        </member>
        <member name="T:Relativity.API.StaticServiceUrisProvider">
            <summary>
            Implimentation of IProvideServiceUris that returns set values.
            </summary>
        </member>
        <member name="M:Relativity.API.StaticServiceUrisProvider.#ctor(System.Uri,System.Uri,System.Uri)">
            <summary>
            Static Uris are for all routes are passed in to be cached.
            </summary>
            <param name="restUri">Endpoint for Rest.</param>
            <param name="rsapiUri">Endpoint for RSAPI.</param>
            <param name="authenticationUri">Endpoing for IdentityServer.</param>
        </member>
        <member name="M:Relativity.API.StaticServiceUrisProvider.RestUri">
            <summary>
            Endpoint for Rest.
            </summary>
            <returns>Endpoint for Rest.</returns>
        </member>
        <member name="M:Relativity.API.StaticServiceUrisProvider.RSAPIUri">
            <summary>
            Endpoint for RSAPI.
            </summary>
            <returns>Endpoint for RSAPI.</returns>
        </member>
        <member name="M:Relativity.API.StaticServiceUrisProvider.AuthenticationUri">
            <summary>
            Endpoing for IdentityServer.
            </summary>
            <returns>Endpoing for IdentityServer.</returns>
        </member>
        <member name="T:Relativity.API.UrlHelper">
             <summary>
             Contains methods used to build URLs in custom code. 
             </summary>
            <remarks> The UrlHelper class simplifies programming with custom pages by helping you build URLs required to manipulate them. </remarks>
        </member>
        <member name="M:Relativity.API.UrlHelper.#ctor(System.Func{System.String})">
            <summary>
            Initializes a new instance of the UrlHelper class by using the specified base URL for a Relativity instance.
            </summary>
            <param name="baseWebsiteUrl"> The URL identifying the protocol and host name used for a Relativity instance as specified in the RelativityInstanceURL configuration value.</param>
        </member>
        <member name="M:Relativity.API.UrlHelper.GetApplicationURL(System.Guid)">
            <summary>
            Gets the uniform resource identifier (URI) for the custom pages in an application on the web server. 
            </summary>
            <remarks>On the web server, the URI for custom pages is the application GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The URI for the custom page root is the application GUID.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the application GUID is empty.</exception>
        </member>
        <member name="M:Relativity.API.UrlHelper.GetRelativePathToCustomPages(System.Guid)">
            <summary>
            Gets the string path of the custom pages for an application on the web server. 
            </summary>
            <remarks>On the web server, string path for custom pages for the application this GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The string path to the custom page root is the application GUID.</returns>
        </member>
        <member name="T:Relativity.API.IProvideServiceUris">
            <summary>
            This interface is used for finding the Uris to various endpoints inside the relativity infrastructure.
            </summary>
        </member>
        <member name="M:Relativity.API.IProvideServiceUris.RestUri">
            <summary>
            This provides the Rest endpoint for Kepler calls.
            </summary>
            <returns>Uri for the Rest endpoint.</returns>
        </member>
        <member name="M:Relativity.API.IProvideServiceUris.RSAPIUri">
            <summary>
            This provides the RSAPI endpoint for RSAPI client calls.
            </summary>
            <returns>Uri for the RSAPI endpoint.</returns>
        </member>
        <member name="M:Relativity.API.IProvideServiceUris.AuthenticationUri">
            <summary>
            This provides the IdentityServer location for authentication calls.
            </summary>
            <returns>Uri for the authenticaiton endpoint.</returns>
        </member>
        <member name="T:Relativity.API.DelegateServiceUrisProvider">
            <summary>
            This implimentation of IProvideServiceUris allows for delegates to fetch the values one demand.
            </summary>
        </member>
        <member name="M:Relativity.API.DelegateServiceUrisProvider.#ctor(System.Func{System.Uri},System.Func{System.Uri},System.Func{System.Uri})">
            <summary>
            This implimentation of IProvideServiceUris allows for delegates to fetch the values one demand.
            </summary>
            <param name="restDelegate">Function to provide Rest endpoint.</param>
            <param name="rsapiDelegate">Function to provide RSAPI endpoint.</param>
            <param name="authenticationDelegate">Function to provide Authentication endpoint.</param>
        </member>
        <member name="M:Relativity.API.DelegateServiceUrisProvider.RestUri">
            <summary>
            This provides the Rest endpoint for Kepler calls.
            </summary>
            <returns>Uri for the Rest endpoint.</returns>
        </member>
        <member name="M:Relativity.API.DelegateServiceUrisProvider.RSAPIUri">
            <summary>
            This provides the RSAPI endpoint for RSAPI client calls.
            </summary>
            <returns>Uri for the RSAPI endpoint.</returns>
        </member>
        <member name="M:Relativity.API.DelegateServiceUrisProvider.AuthenticationUri">
            <summary>
            This provides the IdentityServer location for authentication calls.
            </summary>
            <returns>Uri for the authenticaiton endpoint.</returns>
        </member>
        <member name="T:Relativity.API.ExtensionPointServiceFinder">
            <summary>
            This is a static provider to find interface for infrastructure infromation about the system.
            </summary>
        </member>
        <member name="P:Relativity.API.ExtensionPointServiceFinder.ServiceUriProvider">
            <summary>
            Helps find the Services Uri endpoints.
            </summary>
        </member>
        <member name="P:Relativity.API.ExtensionPointServiceFinder.SystemTokenProvider">
            <summary>
            Helps get System Access Tokens.
            </summary>
        </member>
        <member name="P:Relativity.API.ExtensionPointServiceFinder.WebServerHelper">
            <summary>
            Helps get Uris to make calls inside the environment.
            </summary>
        </member>
        <member name="P:Relativity.API.ExtensionPointServiceFinder.SecurityEventMonitor">
            <summary>
             Helps get Security Monitory to create security events.
            </summary>
        </member>
        <member name="P:Relativity.API.ExtensionPointServiceFinder.SecretStoreHelper">
            <summary>
            Helps get Secret Store to read, write, and delete secrets.
            </summary>
        </member>
        <member name="T:Relativity.API.AccessDeniedException">
            <summary>
            Access violation has occured.
            </summary>
            <remarks>Access Denied.</remarks>
        </member>
        <member name="M:Relativity.API.AccessDeniedException.#ctor">
            <summary>
            Default Access Denied error.
            </summary>
            <remarks>Access Denied.</remarks>
        </member>
        <member name="M:Relativity.API.AccessDeniedException.#ctor(System.String)">
            <summary>
            Custom Access Denied error.
            </summary>
            <param name="message">Custom excpetion message.</param>
            <remarks>Access Denied.</remarks>
        </member>
        <member name="T:Relativity.Services.Security.IPermissionHelper">
            <summary>
            Permission helper to look up permissions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.IPermissionHelper.GetAclListArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of Acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <param name="permissionTypeID">Permission type ID for permissions.</param>
            <returns>ALCs given user has requested permissions for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.IPermissionHelper.GetAclListCsv(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a csv list of Acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <param name="permissionTypeID">Permission type ID for permissions.</param>
            <returns>ALCs given user has requested permissions for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.IPermissionHelper.GetEditAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of edit acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has edit permission for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.IPermissionHelper.GetViewAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of view acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has view permission for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.IPermissionHelper.GetDeleteAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of delete acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has delete permission for on given type in given workspace.</returns>
        </member>
        <member name="T:Relativity.Services.Security.PermissionHelper">
            <summary>
            Permission helper to look up permissions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.#ctor">
            <summary>
            Permission helper to look up permissions.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.GetAclListArray(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of Acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <param name="permissionTypeID">Permission type ID for permissions.</param>
            <returns>ALCs given user has requested permissions for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.GetAclListCsv(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a csv list of Acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <param name="permissionTypeID">Permission type ID for permissions.</param>
            <returns>ALCs given user has requested permissions for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.GetEditAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of edit acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has edit permission for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.GetViewAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of view acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has view permission for on given type in given workspace.</returns>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.GetDeleteAclList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets a list of delete acls.
            </summary>
            <param name="userID">User's artifactID.</param>
            <param name="workspaceID">Workspace artifactID.</param>
            <param name="artifactTypeID">Artifact type ID for permissions.</param>
            <returns>ALCs given user has delete permission for on given type in given workspace.</returns>
        </member>
        <member name="F:Relativity.Services.Security.PermissionHelper.GetDBContext">
            <summary>
            Delegate to get a IDBContext for a given Workspace.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionHelper.Dispose">
            <summary>
            Clean up logic
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionQuery">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionQuery.RetrieveAllAclIDsForUser(Relativity.API.IDBContext,System.Int32,System.Int32)">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionQuery.RetrieveAllAclIDsForUser(Relativity.API.IDBContext,System.Int32)">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionsInfo">
            <summary>
            Permissions Information object
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionsInfo.Type">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.View">
            <summary>
            View permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Edit">
            <summary>
            Edit permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Delete">
            <summary>
            Delete permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Secure">
            <summary>
            Secure permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Add">
            <summary>
            Add permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Other">
            <summary>
            Other permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.MassAction">
            <summary>
            Mass Action permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Browser">
            <summary>
            Browser permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.AdminOperations">
            <summary>
            Admin Operation permission.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Type.Custom">
            <summary>
            Custom permission.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionsInfo.Permission">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="F:Relativity.Services.Security.PermissionsInfo.Permission.ViewAdminRepository">
            <summary>
            View Admin objects
            </summary>
        </member>
    </members>
</doc>
